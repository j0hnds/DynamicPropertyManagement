// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace PropertyManager {
    
    
    public partial class LoginDlg {
        
        private Gtk.Table table1;
        
        private Gtk.ComboBox cbEnvironment;
        
        private Gtk.Label lblEnvironment;
        
        private Gtk.Label lblPassword;
        
        private Gtk.Label lblUserName;
        
        private Gtk.Entry txtPassword;
        
        private Gtk.Entry txtUserName;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget PropertyManager.LoginDlg
            this.Name = "PropertyManager.LoginDlg";
            this.Title = Mono.Unix.Catalog.GetString("Logon to Property Manager");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.HasSeparator = false;
            // Internal child PropertyManager.LoginDlg.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(4));
            this.table1.ColumnSpacing = ((uint)(4));
            this.table1.BorderWidth = ((uint)(4));
            // Container child table1.Gtk.Table+TableChild
            this.cbEnvironment = Gtk.ComboBox.NewText();
            this.cbEnvironment.AppendText(Mono.Unix.Catalog.GetString("Local"));
            this.cbEnvironment.AppendText(Mono.Unix.Catalog.GetString("Development"));
            this.cbEnvironment.AppendText(Mono.Unix.Catalog.GetString("QA"));
            this.cbEnvironment.AppendText(Mono.Unix.Catalog.GetString("UAT"));
            this.cbEnvironment.AppendText(Mono.Unix.Catalog.GetString("Production"));
            this.cbEnvironment.Name = "cbEnvironment";
            this.cbEnvironment.Active = 0;
            this.table1.Add(this.cbEnvironment);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.cbEnvironment]));
            w2.TopAttach = ((uint)(2));
            w2.BottomAttach = ((uint)(3));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.lblEnvironment = new Gtk.Label();
            this.lblEnvironment.Name = "lblEnvironment";
            this.lblEnvironment.Xalign = 0F;
            this.lblEnvironment.LabelProp = Mono.Unix.Catalog.GetString("Environment:");
            this.table1.Add(this.lblEnvironment);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.lblEnvironment]));
            w3.TopAttach = ((uint)(2));
            w3.BottomAttach = ((uint)(3));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.lblPassword = new Gtk.Label();
            this.lblPassword.Name = "lblPassword";
            this.lblPassword.Xalign = 0F;
            this.lblPassword.LabelProp = Mono.Unix.Catalog.GetString("Password:");
            this.table1.Add(this.lblPassword);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.lblPassword]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.lblUserName = new Gtk.Label();
            this.lblUserName.Name = "lblUserName";
            this.lblUserName.Xalign = 0F;
            this.lblUserName.LabelProp = Mono.Unix.Catalog.GetString("User Name:");
            this.table1.Add(this.lblUserName);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.lblUserName]));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtPassword = new Gtk.Entry();
            this.txtPassword.CanFocus = true;
            this.txtPassword.Name = "txtPassword";
            this.txtPassword.IsEditable = true;
            this.txtPassword.ActivatesDefault = true;
            this.txtPassword.Visibility = false;
            this.txtPassword.InvisibleChar = '●';
            this.table1.Add(this.txtPassword);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.txtPassword]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.txtUserName = new Gtk.Entry();
            this.txtUserName.CanFocus = true;
            this.txtUserName.Name = "txtUserName";
            this.txtUserName.IsEditable = true;
            this.txtUserName.ActivatesDefault = true;
            this.txtUserName.InvisibleChar = '●';
            this.table1.Add(this.txtUserName);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.txtUserName]));
            w7.LeftAttach = ((uint)(1));
            w7.RightAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            w1.Add(this.table1);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w1[this.table1]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Internal child PropertyManager.LoginDlg.ActionArea
            Gtk.HButtonBox w9 = this.ActionArea;
            w9.Name = "dialog1_ActionArea";
            w9.Spacing = 6;
            w9.BorderWidth = ((uint)(5));
            w9.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w10 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonCancel]));
            w10.Expand = false;
            w10.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.Sensitive = false;
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonOk]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 270;
            this.DefaultHeight = 163;
            this.buttonOk.HasDefault = true;
            this.Show();
            this.txtUserName.Changed += new System.EventHandler(this.UserNameChanged);
            this.txtPassword.Changed += new System.EventHandler(this.PasswordChanged);
            this.cbEnvironment.Changed += new System.EventHandler(this.EnvironmentChanged);
        }
    }
}
